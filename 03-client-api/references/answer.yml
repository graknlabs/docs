
title: "Answer"
description:
  common: &common-description >
    The type of answers contained in the iterator depends on the type of the query that has returned the iterator.
    The table below illustrates the answer types mapped to query types.
  java: >
    The type of answers returned by execution of a query depends on the type of query executed.
    The table below illustrates the answer types mapped to query types.
  javascript: *common-description
  python: *common-description
mappings:
  -
    query: define
    answer: "[ConceptMap](#conceptmap)"
  -
    query: undefine
    answer: "[ConceptMap](#conceptmap)"
  -
    query: get
    answer: "[ConceptMap](#conceptmap)"
  -
    query: insert
    answer: "[ConceptMap](#conceptmap)"
  -
    query: delete
    answer: "[Void](#void)"
  -
    query: "aggregate count/min/max/sum/mean/std"
    answer: "[Numeric](#numeric)"
  -
    query: aggregate group
    answer: "[AnswerGroup](#answergroup)"
  -
    query: "compute count/min/max/sum/mean/std"
    answer: "[Numeric](#numeric)"
  -
    query: compute path
    answer: "[ConceptList](#conceptlist)"
  -
    query: compute cluster
    answer: "[ConceptSet](#conceptset)"
  -
    query: compute centrality
    answer: "[ConceptSetMeasure](#conceptsetmeasure)"

types:
  - type1:
    title: ConceptMap
    methods:
      - method:
        common: &method-conceptmap-map
          title: Retrieve a mapping of variables to concepts
        java:
          <<: *method-conceptmap-map
          method: conceptmap.map();
          description: Produces a Map where keys are variable names and values are [`concept`](../concept-api/concept)s.
          returns:
            - "Map<Variable, Concept>"
        javascript:
          <<: *method-conceptmap-map
          method: conceptmap.map();
          description: Produces a Javascript object where keys are variable names and values are concepts
          returns:
            - "`Map<String, Concept>`"
        python:
          <<: *method-conceptmap-map
          method: conceptmap.map()
          description: Produces a dictionary where keys are variable names and values are concepts
          returns:
            - Dictionary of String to Concept

      - method:
        common: &method-conceptmap-get
          title: Retrieve a concept corresponding to a specific variable
          description: Retrieve a concept for a given variable name without explicitly retriving the map
          accepts:
            param1:
              name: var
              description: The string representation of a variable
              type: String
          returns:
            - "[`Concept`](../concept-api/concept)"
        java:
          <<: *method-conceptmap-get
          method: conceptmap.get(var)
        python:
          <<: *method-conceptmap-get
          method: conceptmap.get(var)

      - method:
          common: &method-conceptmap-query-pattern
            title: Query pattern that leads to the conceptmap
            description: The query pattern, present when this concept map has an explanation, that led to this answer map (`.map()`)
            returns:
              - String
          java:
            <<: *method-conceptmap-query-pattern
            method: conceptmap.queryPattern();
            -returns:
              - "[`Graql.Pattern`](#graql)"
          javascript:
            <<: *method-conceptmap-query-pattern
            method: conceptmap.queryPattern();
          python:
            <<: *method-conceptmap-query-pattern
            method: conceptmap.query_pattern()

      - method:
        common: &method-conceptmap-has-explanation
          title: Check if an explanation is available for this answer
          description: A boolean flag that tells whether there is an explanation that could be retrieved for this concept map
          returns:
            - "`boolean`"
        java:
          <<: *method-conceptmap-has-explanation
          method: conceptmap.hasExplanation();
        javascript:
          <<: *method-conceptmap-has-explanation
          method: conceptmap.hasExplanation();
        python:
          <<: *method-conceptmap-has-explanation
          method: conceptmap.has_explanation()

      - method:
        common: &method-explanation
          title: Explanation of a ConceptMap
          description: Retrieve the Explanation associated with an explainable ConceptMap. Performs round trip to server.
          returns:
            - "[Explanation](#explanation)"
        java:
          <<: *method-explanation
          method: conceptmap.explanation();
        javascript:
          <<: *method-explanation
          method: await conceptmap.explanation();
        python:
          <<: *method-explanation
          method: conceptmap.explanation()

  # TO BE UNCOMMENTED UPON THE RELEASE OF 1.6.0 CLIENTS
  # - type2:
  #   title: Void
  #   methods:
  #     - method:
  #       common: &method-void-message
  #         title: Retrieve the status message 
  #         description: Retrieves the message describing the status of the query.
  #         method: answer.message();
  #       java:
  #         <<: *method-void-message
  #         returns:
  #           - "`String`"
  #       javascript:
  #         <<: *method-void-message
  #         returns:
  #           - "`String`"
  #       python:
  #         <<: *method-void-message
  #         returns:
  #           - "string"

  - type3:
    title: Numeric
    methods:
      - method:
        common: &method-value-number
          title: Retrieve nummeric value of an aggregate/computed answer
        java:
          <<: *method-value-number
          method: answer.number();
          returns:
            - int
            - float
        javascript:
          <<: *method-value-number
          method: answer.number();
          returns:
            - number
        python:
          <<: *method-value-number
          method: answer.number()
          returns:
            - int
            - float


  - type4:
    title: ConceptList
    methods:
      - method:
        common: &method-conceptlist-list
          title: Retrieve ids of all concepts in a ConceptList answer
        java:
          <<: *method-conceptlist-list
          method: answer.list();
          returns:
            - Array of String
        javascript:
          <<: *method-conceptlist-list
          method: answer.list();
          returns:
            - Array of String
        python:
          <<: *method-conceptlist-list
          method: answer.list()
          returns:
            - List of String


  - type5:
    title: ConceptSet
    methods:
      - method:
        common: &method-conceptset-set
          title: Retrieve set of ids of concepts after a cluster computation
          returns:
            - Set of String
        java:
          <<: *method-conceptset-set
          method: answer.set();
        javascript:
          <<: *method-conceptset-set
          method: answer.set();
        python:
          <<: *method-conceptset-set
          method: answer.set()


  - type6:
    title: ConceptSetMeasure
    methods:
      - method:
        common: &method-conceptsetmeasure-measurement
          title: Retrieve the numeric value of a centrality computation
        java:
          <<: *method-conceptsetmeasure-measurement
          method: answer.measurement();
          returns:
            - int
            - float
        javascript:
          <<: *method-conceptsetmeasure-measurement
          method: answer.measurement();
          returns:
            - number
        python:
          <<: *method-conceptsetmeasure-measurement
          method: answer.measurement()
          returns:
            - int
            - float

      - method:
        common: &method-conceptsetmeasure-set
          title: Retrieve a set of ids of concepts after a centrality computation
          returns:
            - Set of String
        java:
          <<: *method-conceptsetmeasure-set
          method: answer.set();
        javascript:
          <<: *method-conceptsetmeasure-set
          method: answer.set()
        python:
          <<: *method-conceptsetmeasure-set
          method: answer.set()


  - type7:
    title: AnswerGroup
    methods:
      - method:
        common: &method-answergroup-owner
          title: Retrieve the concept that is the group owner
          returns:
            - "[Concept](../concept-api/concept)"
        java:
          <<: *method-answergroup-owner
          method: answer.owner();
        javascript:
          <<: *method-answergroup-owner
          method: answer.owner();
        python:
          <<: *method-answergroup-owner
          method: answer.owner()

      - method:
        common: &method-answergroup-answers
          title: Retrieve the answers of the group
        java:
          <<: *method-answergroup-answers
          method: answer.answers();
          returns:
            - Array of Answer
        javascript:
          <<: *method-answergroup-answers
          method: answer.answers();
          returns:
            - Array of Answer
        python:
          <<: *method-answergroup-answers
          method: answer.answers()
          returns:
            - List of Answer

  - type8:
    title: Explanation
    methods:
      - method:
        common: &method-explanation-get-answers
          title: Retrieve source facts of inference
          description: Provides a list of answers from which the inferred answer is derived.
        java:
          <<: *method-explanation-get-answers
          method: explanation.getAnswers();
          returns:
            - "[`List<ConceptMap>`](#conceptmap)"
        javascript:
          <<: *method-explanation-get-answers
          method: explanation.getAnswers();
          returns:
            - Array of [`ConceptMap`](#conceptmap)
        python:
          <<: *method-explanation-get-answers
          method: explanation.get_answers()
          returns:
            - List of [`ConceptMap`](#conceptmap)
